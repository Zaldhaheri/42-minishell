Parsing:
do the single quotes parsing similiar to double quotes
clean up the double quotes parsing and the parsing.c file

this thing also:
//bash-3.2$ ec""""ho hel"a"lo
//helalo

set_types:
dollar sign and declaration, as well as the quotes and quoted files etc.

Double quotes:
double quotes and single quotes work in a way where its " open the " close, and concats everything next to
it if its not considered a special character.
ex: ec"h"o

double quotes semi works, some cases dont work like:
"e" """c" "h o" hello
e-- h--o hello
i believe the problem is the "" quotes then " after it.
but for simpler cases it should work i think.

i think parsing for the double quotes is done, single quotes next, then add functions to set types while parsing
for some of the cases.
lesgo

for inputs like: aaaaaaaaaaaaaaaaaa
we get:
WORD: aaaaaaaaaaaaaaaaaa.
we in
Adding: aaaaaaaaaaaaaaaaaa, Type: 10
we out
Adding: aaaaaaaaaaaaaaaaaa, Type: 10
aaaaaaaaaaaaaaaaaa--aaaaaaaaaaaaaaaaaa
NODE: aaaaaaaaaaaaaaaaaa Type: 10 NODE: aaaaaaaaaaaaaaaaaa Type: 10 
NODE: aaaaaaaaaaaaaaaaaa Type: 10 NODE: aaaaaaaaaaaaaaaaaa Type: 10
theres some kind of error with large inputs, not sure how to fix it.

Piping works more or less for standard fds
	- need to address user files
	- MUST ADDRESS LEAKS!!!
	- Clean up code for Norminette

to implement $ and = we will need to create our env. First get the values of envp and make it into a linked list,
Then when using execve we will use our own env, if changes need to be made to our environment then we change them while adding.
When we add a value like a=2, we will add this using ft_lstadd_back. the struct t_env will have a key and value
A=2
key: A
value: 2