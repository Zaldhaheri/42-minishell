
Piping works more or less for standard fds
	- need to address user files
	- MUST ADDRESS LEAKS!!!
	- Clean up code for Norminette

to implement $ and = we will need to create our env. First get the values of envp and make it into a linked list,
Then when using execve we will use our own env, if changes need to be made to our environment then we change them while adding.
When we add a value like a=2, we will add this using ft_lstadd_back. the struct t_env will have a key and value
A=2
key: A
value: 2
$ and = works, needs more test cases to make sure, next we need to do the $ expansion in the double quotes.


When looping through "", if we find a $, we expand it there, then continue parsing.
if looping through '' we dont expand it.

HEREDOC test fd_in and fd_out. Norminette and leaks

leaks for normal inputs with "",'',spaces found and cleared
leaks found when using = and $ will clear soon.

need to add $? for non exec cases such us no file found or no file argument
e.g having < without a file name or file not found
basically where ever we have perror

make function to set exit status, return myenvp as char**.

need to make unset and export function
unset will loop through the myenv and delone the node with the given key, make the prev point to next
export without argument will sort the env when printing only, and print nothing when with arguments but add to myenv with hide=0
make a function to make our linked list env to a char** datatype

some errors on valgrind:

minishell# pwd
==10775== LEAK SUMMARY:
==10775==    definitely lost: 0 bytes in 0 blocks
==10775==    indirectly lost: 0 bytes in 0 blocks
==10775==      possibly lost: 0 bytes in 0 blocks
==10775==    still reachable: 0 bytes in 0 blocks
==10775==         suppressed: 204,642 bytes in 219 blocks
==10775== 
==10775== Use --track-origins=yes to see where uninitialised values come from
==10775== For lists of detected and suppressed errors, rerun with: -s
==10775== ERROR SUMMARY: 15 errors from 15 contexts (suppressed: 1 from 1)

